<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.6.7 on win32)" generated="20190312 14:37:23.438" rpa="false">
<suite id="s1" name="Api" source="C:\development\robot-scripts\1-RobotFramaework_demo_Project_API\demo\Tests\api.robot">
<test id="s1-t1" name="Tester Duplication">
<kw name="Requete POST Utilisateur dupliquÃ©" library="SignupBack">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session2</arg>
<arg>${website_link}</arg>
</arguments>
<msg timestamp="20190312 14:37:23.904" level="INFO">Creating Session using : alias=session2, url=http://localhost/demo/api/user, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190312 14:37:23.904" endtime="20190312 14:37:23.904"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>username=${username}</arg>
<arg>password=${password}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20190312 14:37:23.904" level="INFO">&amp;{data} = { username=Mustaph | password=ml }</msg>
<status status="PASS" starttime="20190312 14:37:23.904" endtime="20190312 14:37:23.904"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20190312 14:37:23.904" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20190312 14:37:23.904" endtime="20190312 14:37:23.904"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>session2</arg>
<arg>signup.php</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190312 14:37:23.905" level="INFO">Post Request using : alias=session2, uri=signup.php, data=username=Mustaph&amp;password=ml, headers={'Content-Type': 'application/x-www-form-urlencoded'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190312 14:37:23.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190312 14:37:23.904" endtime="20190312 14:37:23.905"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190312 14:37:23.905" level="INFO">${json} = {'status': False, 'message': 'Username already exists!'}</msg>
<status status="PASS" starttime="20190312 14:37:23.905" endtime="20190312 14:37:23.905"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190312 14:37:23.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190312 14:37:23.905" endtime="20190312 14:37:23.905"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json['message']}</arg>
<arg>Username already exists!</arg>
</arguments>
<status status="PASS" starttime="20190312 14:37:23.905" endtime="20190312 14:37:23.905"></status>
</kw>
<status status="PASS" starttime="20190312 14:37:23.904" endtime="20190312 14:37:23.905"></status>
</kw>
<kw name="Test Utilisateur non duplique BD" library="SignupBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
</arguments>
<msg timestamp="20190312 14:37:23.958" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20190312 14:37:23.905" endtime="20190312 14:37:23.973"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this
will throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit
transaction commit or rollback.</doc>
<arguments>
<arg>select id from users where username = '${username}' and password = md5('${password}')</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20190312 14:37:23.973" level="INFO">Executing : Row Count Is Equal To X  |  select id from users where username = 'Mustaph' and password = md5('ml')  |  1 </msg>
<msg timestamp="20190312 14:37:23.973" level="INFO">Executing : Row Count  |  select id from users where username = 'Mustaph' and password = md5('ml') </msg>
<status status="PASS" starttime="20190312 14:37:23.973" endtime="20190312 14:37:23.973"></status>
</kw>
<status status="PASS" starttime="20190312 14:37:23.905" endtime="20190312 14:37:23.973"></status>
</kw>
<tags>
<tag>Third</tag>
</tags>
<status status="PASS" starttime="20190312 14:37:23.904" endtime="20190312 14:37:23.973" critical="yes"></status>
</test>
<status status="PASS" starttime="20190312 14:37:23.454" endtime="20190312 14:37:23.973"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Third</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Api">Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
