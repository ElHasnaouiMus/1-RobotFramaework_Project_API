<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.6.5 on win32)" generated="20190305 10:57:46.189" rpa="false">
<suite id="s1" name="Api" source="C:\Users\melhasnaoui\Robot-scripts\demo\Tests\api.robot">
<test id="s1-t1" name="verifier la connection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>demo</arg>
<arg>http://localhost/demo/api/user</arg>
</arguments>
<msg timestamp="20190305 10:57:46.705" level="INFO">Creating Session using : alias=demo, url=http://localhost/demo/api/user, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190305 10:57:46.705" endtime="20190305 10:57:46.705"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>demo</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190305 10:57:46.744" level="INFO">Get Request using : alias=demo, uri=/, headers=None json=None</msg>
<msg timestamp="20190305 10:57:46.744" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190305 10:57:46.705" endtime="20190305 10:57:46.744"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190305 10:57:46.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190305 10:57:46.744" endtime="20190305 10:57:46.744"></status>
</kw>
<status status="PASS" starttime="20190305 10:57:46.705" endtime="20190305 10:57:46.744" critical="yes"></status>
</test>
<test id="s1-t2" name="s'inscrire">
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>demo</arg>
<arg>/signup.php</arg>
</arguments>
<msg timestamp="20190305 10:57:46.791" level="INFO">Post Request using : alias=demo, uri=/signup.php, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<status status="PASS" starttime="20190305 10:57:46.744" endtime="20190305 10:57:46.791"></status>
</kw>
<kw name="Post" library="RequestsLibrary">
<doc>**Deprecated- See Post Request now**</doc>
<arguments>
<arg>demo</arg>
<arg>/Signup.php?</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190305 10:57:46.791" level="WARN">Deprecation Warning: Use Post Request in the future</msg>
<msg timestamp="20190305 10:57:46.837" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190305 10:57:46.791" endtime="20190305 10:57:46.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.text}</arg>
</arguments>
<msg timestamp="20190305 10:57:46.837" level="INFO">&lt;br /&gt;
&lt;font size='1'&gt;&lt;table class='xdebug-error xe-notice' dir='ltr' border='1' cellspacing='0' cellpadding='1'&gt;
&lt;tr&gt;&lt;th align='left' bgcolor='#f57900' colspan="5"&gt;&lt;span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'&gt;( ! )&lt;/span&gt; Notice: Undefined index: username in C:\wamp\www\demo\api\User\signup.php on line &lt;i&gt;15&lt;/i&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th align='left' bgcolor='#e9b96e' colspan='5'&gt;Call Stack&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th align='center' bgcolor='#eeeeec'&gt;#&lt;/th&gt;&lt;th align='left' bgcolor='#eeeeec'&gt;Time&lt;/th&gt;&lt;th align='left' bgcolor='#eeeeec'&gt;Memory&lt;/th&gt;&lt;th align='left' bgcolor='#eeeeec'&gt;Function&lt;/th&gt;&lt;th align='left' bgcolor='#eeeeec'&gt;Location&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td bgcolor='#eeeeec' align='center'&gt;1&lt;/td&gt;&lt;td bgcolor='#eeeeec' align='center'&gt;0.0000&lt;/td&gt;&lt;td bgcolor='#eeeeec' align='right'&gt;247152&lt;/td&gt;&lt;td bgcolor='#eeeeec'&gt;{main}(  )&lt;/td&gt;&lt;td title='C:\wamp\www\demo\api\User\signup.php' bgcolor='#eeeeec'&gt;..\signup.php&lt;b&gt;:&lt;/b&gt;0&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/font&gt;
&lt;br /&gt;
&lt;font size='1'&gt;&lt;table class='xdebug-error xe-notice' dir='ltr' border='1' cellspacing='0' cellpadding='1'&gt;
&lt;tr&gt;&lt;th align='left' bgcolor='#f57900' colspan="5"&gt;&lt;span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'&gt;( ! )&lt;/span&gt; Notice: Undefined index: password in C:\wamp\www\demo\api\User\signup.php on line &lt;i&gt;16&lt;/i&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th align='left' bgcolor='#e9b96e' colspan='5'&gt;Call Stack&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th align='center' bgcolor='#eeeeec'&gt;#&lt;/th&gt;&lt;th align='left' bgcolor='#eeeeec'&gt;Time&lt;/th&gt;&lt;th align='left' bgcolor='#eeeeec'&gt;Memory&lt;/th&gt;&lt;th align='left' bgcolor='#eeeeec'&gt;Function&lt;/th&gt;&lt;th align='left' bgcolor='#eeeeec'&gt;Location&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td bgcolor='#eeeeec' align='center'&gt;1&lt;/td&gt;&lt;td bgcolor='#eeeeec' align='center'&gt;0.0000&lt;/td&gt;&lt;td bgcolor='#eeeeec' align='right'&gt;247152&lt;/td&gt;&lt;td bgcolor='#eeeeec'&gt;{main}(  )&lt;/td&gt;&lt;td title='C:\wamp\www\demo\api\User\signup.php' bgcolor='#eeeeec'&gt;..\signup.php&lt;b&gt;:&lt;/b&gt;0&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/font&gt;
{"status":false,"message":"Username already exists!"}</msg>
<status status="PASS" starttime="20190305 10:57:46.837" endtime="20190305 10:57:46.837"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>Successfully Signup!</arg>
</arguments>
<msg timestamp="20190305 10:57:46.837" level="FAIL">Resolving variable '${resp.json()}' failed: JSONDecodeError: Expecting value: line 1 column 1 (char 0)</msg>
<status status="FAIL" starttime="20190305 10:57:46.837" endtime="20190305 10:57:46.837"></status>
</kw>
<status status="FAIL" starttime="20190305 10:57:46.744" endtime="20190305 10:57:46.837" critical="yes">Resolving variable '${resp.json()}' failed: JSONDecodeError: Expecting value: line 1 column 1 (char 0)</status>
</test>
<test id="s1-t3" name="se connecter">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>demo</arg>
<arg>/login.php?username=${username}&amp;password=${password}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190305 10:57:46.869" level="INFO">Get Request using : alias=demo, uri=/login.php?username=Mustaph&amp;password=ml, headers=None json=None</msg>
<msg timestamp="20190305 10:57:46.869" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190305 10:57:46.837" endtime="20190305 10:57:46.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190305 10:57:46.869" level="INFO">{'status': False, 'message': 'Invalid Username or Password!'}</msg>
<status status="PASS" starttime="20190305 10:57:46.869" endtime="20190305 10:57:46.869"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>Successfully Login!</arg>
</arguments>
<msg timestamp="20190305 10:57:46.869" level="FAIL">Dictionary does not contain value 'Successfully Login!'.</msg>
<status status="FAIL" starttime="20190305 10:57:46.869" endtime="20190305 10:57:46.869"></status>
</kw>
<status status="FAIL" starttime="20190305 10:57:46.837" endtime="20190305 10:57:46.869" critical="yes">Dictionary does not contain value 'Successfully Login!'.</status>
</test>
<status status="FAIL" starttime="20190305 10:57:46.204" endtime="20190305 10:57:46.869"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="2">Critical Tests</stat>
<stat pass="1" fail="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="2" id="s1" name="Api">Api</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20190305 10:57:46.791" level="WARN">Deprecation Warning: Use Post Request in the future</msg>
</errors>
</robot>
